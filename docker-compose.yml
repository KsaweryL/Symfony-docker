version: "3.7"
services:
  nginx:
    build:
      context: ./docker
      dockerfile: Dockerfile-nginx
    volumes:
      - ./:/var/www/project/:cached
    ports:
      - 10301:80 # Ports that are exposed, you can connect to port 8001 to port 80 of the container.
    networks:
      - symfony
  fpm:
    build: # Info to build the Docker image
      context: ./docker # Specify where the Dockerfile is located (e.g. in the root directory of the project)
      dockerfile: Dockerfile-php # Specify the name of the Dockerfile
    environment: # You can use this section to set environment variables. But you can also use the .env file.
      - DATABASE_URL=mysql://root:root@db/docker_sf
    volumes:
      - ./:/var/www/project/:cached # Location of the project for php-fpm. Note this should be the same for NGINX.*
      - ./docker/build/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - ./docker/build/php/conf.d/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini
    networks:
      - symfony # Docker containers (services) that need to connect to each other should be on the same network.
  db: #address
    image: mariadb:10.2.29
    ports:
      - "3317:3306" #outside:inside docker container from-within
    environment:
      - MYSQL_DATABASE=docker_sf
      - MYSQL_ROOT_PASSWORD=root
    volumes:
      - persistent:/var/lib/mysql
      - ./docker/build/db/:/docker-entrypoint-initdb.d/
    networks:
      - symfony

###> doctrine/doctrine-bundle ###
  #database:
  #  image: postgres:${POSTGRES_VERSION:-15}-alpine
  #  ports:
  #    - "4000:4010" #outside:inside docker container from-within
  #  environment:
  #    POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
   #   POSTGRES_PASSWORD: root            #${POSTGRES_PASSWORD:-!ChangeMe!}
  #    POSTGRES_USER: root2           #${POSTGRES_USER:-app}
  #  volumes:
    #  - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###
networks:
  symfony:

volumes:
  persistent:
###> doctrine/doctrine-bundle ###
  #database_data:
###< doctrine/doctrine-bundle ###
